/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../internal/utils";
import { ErrorDetail } from "./errordetail";
import { classToPlain, Expose, Type } from "class-transformer";

/**
 * Bad Request
 */
export class BadRequestResponse extends Error {
    /**
     * Details of the error.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    @Type(() => ErrorDetail)
    error: ErrorDetail;

    constructor(err?: BadRequestResponse) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "BadRequestResponse";
        Object.setPrototypeOf(this, BadRequestResponse.prototype);
    }
}
